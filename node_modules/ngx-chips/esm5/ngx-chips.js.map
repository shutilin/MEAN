{
  "version": 3,
  "file": "ngx-chips.js",
  "sources": [
    "ng://ngx-chips/modules/tag-input.module.ts",
    "ng://ngx-chips/modules/components/icon/icon.ts",
    "ng://ngx-chips/modules/core/providers/drag-provider.ts",
    "ng://ngx-chips/modules/components/tag-input/tag-input.ts",
    "ng://ngx-chips/modules/components/tag-input/animations.ts",
    "ng://ngx-chips/modules/components/tag/tag.component.ts",
    "ng://ngx-chips/modules/components/tag/tag-ripple.component.ts",
    "ng://ngx-chips/modules/components/tag-input-form/tag-input-form.component.ts",
    "ng://ngx-chips/modules/core/helpers/listen.ts",
    "ng://ngx-chips/modules/core/accessor.ts",
    "ng://ngx-chips/modules/core/providers/options-provider.ts",
    "ng://ngx-chips/modules/defaults.ts",
    "ng://ngx-chips/modules/components/dropdown/tag-input-dropdown.component.ts",
    "ng://ngx-chips/modules/core/constants/index.ts",
    "ng://ngx-chips/modules/core/pipes/highlight.pipe.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n",
    "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    template: `<span>\n    <svg height=\"16px\" viewBox=\"0 0 32 32\" width=\"16px\">\n        <path d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\n              fill=\"#121313\" />\n    </svg>\n</span>\n`,\n    styles: [`.dark tag:focus {\n  -webkit-box-shadow: 0 0 0 1px #323232;\n          box-shadow: 0 0 0 1px #323232; }\n\n.ng2-tag-input.bootstrap3-info {\n  background-color: #fff;\n  display: inline-block;\n  color: #555;\n  vertical-align: middle;\n  max-width: 100%;\n  height: 42px;\n  line-height: 44px; }\n\n.ng2-tag-input.bootstrap3-info input {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0 6px;\n  margin: 0;\n  width: auto;\n  max-width: inherit; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n  color: #777;\n  opacity: 1; }\n\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info input:focus {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n  border: 1px solid #ccc; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n  -webkit-box-shadow: inset 0 1px 1px #d9534f;\n          box-shadow: inset 0 1px 1px #d9534f; }\n\n.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n  padding: 0.25rem 0;\n  min-height: 32px;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .ng2-tag-input:focus {\n    outline: 0; }\n  .ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #2196F3; }\n  .ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #f44336; }\n  .ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .ng2-tag-input form {\n    margin: 0.1em 0; }\n  .ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.minimal.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 1px solid transparent; }\n  .minimal.ng2-tag-input:focus {\n    outline: 0; }\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .minimal.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.dark.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #444; }\n  .dark.ng2-tag-input:focus {\n    outline: 0; }\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .dark.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .dark.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .bootstrap.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #0275d8; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #d9534f; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap3-info.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  padding: 4px;\n  cursor: text;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  border-radius: 4px; }\n  .bootstrap3-info.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 1px solid #d9534f; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap3-info.ng2-tag-input form {\n    margin: 0.1em 0; }\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.error-message {\n  font-size: 0.8em;\n  color: #f44336;\n  margin: 0.5em 0 0 0; }\n\n.bootstrap .error-message {\n  color: #d9534f; }\n\n:host(delete-icon) {\n  width: 20px;\n  height: 16px;\n  -webkit-transition: all 0.15s;\n  transition: all 0.15s;\n  display: inline-block;\n  text-align: right; }\n  :host(delete-icon) path {\n    fill: #444; }\n  :host(delete-icon) svg {\n    vertical-align: bottom;\n    height: 34px; }\n\n:host(delete-icon):hover {\n  -webkit-transform: scale(1.5) translateY(-3px);\n          transform: scale(1.5) translateY(-3px); }\n\n:host-context(.dark) {\n  text-align: right; }\n  :host-context(.dark) path {\n    fill: #fff; }\n  :host-context(.dark) svg {\n    vertical-align: bottom;\n    height: 34px; }\n\n:host-context(.minimal) {\n  text-align: right; }\n  :host-context(.minimal) path {\n    fill: #444; }\n  :host-context(.minimal) svg {\n    vertical-align: bottom;\n    height: 34px; }\n\n:host-context(.bootstrap) {\n  text-align: right; }\n  :host-context(.bootstrap) path {\n    fill: #fff; }\n  :host-context(.bootstrap) svg {\n    vertical-align: bottom;\n    height: 34px; }\n\n:host-context(tag:focus) path,\n:host-context(tag:active) path {\n  fill: #fff; }\n\n:host-context(.dark tag:focus) path,\n:host-context(.dark tag:active) path {\n  fill: #000; }\n\n:host-context(.minimal tag:focus) path,\n:host-context(.minimal tag:active) path {\n  fill: #000; }\n\n:host-context(.bootstrap tag:focus) path,\n:host-context(.bootstrap tag:active) path {\n  fill: #fff; }\n\n:host-context(.bootstrap3-info) {\n  height: inherit; }\n  :host-context(.bootstrap3-info) path {\n    fill: #fff; }\n`]\n})\nexport class DeleteIconComponent {}\n",
    "import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean,\n    dropping: boolean,\n    index: number | undefined\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag {\n        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        return JSON.parse(data) as DraggedTag;\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: {[K in StateProperty]?: State[K]}): void {\n        this.state = {...this.state, ...state};\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n",
    "// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit,\n    Type\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\nimport { OptionsProvider } from '../../core/providers/options-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { TagInputOptions } from '../../defaults';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (global as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n\nconst defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\n\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styles: [`.dark tag:focus {\n  -webkit-box-shadow: 0 0 0 1px #323232;\n          box-shadow: 0 0 0 1px #323232; }\n\n.ng2-tag-input.bootstrap3-info {\n  background-color: #fff;\n  display: inline-block;\n  color: #555;\n  vertical-align: middle;\n  max-width: 100%;\n  height: 42px;\n  line-height: 44px; }\n\n.ng2-tag-input.bootstrap3-info input {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0 6px;\n  margin: 0;\n  width: auto;\n  max-width: inherit; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n  color: #777;\n  opacity: 1; }\n\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info input:focus {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n  border: 1px solid #ccc; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n  -webkit-box-shadow: inset 0 1px 1px #d9534f;\n          box-shadow: inset 0 1px 1px #d9534f; }\n\n.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n  padding: 0.25rem 0;\n  min-height: 32px;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .ng2-tag-input:focus {\n    outline: 0; }\n  .ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #2196F3; }\n  .ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #f44336; }\n  .ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .ng2-tag-input form {\n    margin: 0.1em 0; }\n  .ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.minimal.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 1px solid transparent; }\n  .minimal.ng2-tag-input:focus {\n    outline: 0; }\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .minimal.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.dark.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #444; }\n  .dark.ng2-tag-input:focus {\n    outline: 0; }\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .dark.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .dark.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .bootstrap.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #0275d8; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #d9534f; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap3-info.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  padding: 4px;\n  cursor: text;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  border-radius: 4px; }\n  .bootstrap3-info.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 1px solid #d9534f; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap3-info.ng2-tag-input form {\n    margin: 0.1em 0; }\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.error-message {\n  font-size: 0.8em;\n  color: #f44336;\n  margin: 0.5em 0 0 0; }\n\n.bootstrap .error-message {\n  color: #d9534f; }\n\n.progress-bar, .progress-bar:before {\n  height: 2px;\n  width: 100%;\n  margin: 0; }\n\n.progress-bar {\n  background-color: #2196F3;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: absolute;\n  bottom: 0; }\n\n.progress-bar:before {\n  background-color: #82c4f8;\n  content: '';\n  -webkit-animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite; }\n\n@-webkit-keyframes running-progress {\n  0% {\n    margin-left: 0;\n    margin-right: 100%; }\n  50% {\n    margin-left: 25%;\n    margin-right: 0; }\n  100% {\n    margin-left: 100%;\n    margin-right: 0; } }\n\n@keyframes running-progress {\n  0% {\n    margin-left: 0;\n    margin-right: 100%; }\n  50% {\n    margin-left: 25%;\n    margin-right: 0; }\n  100% {\n    margin-left: 100%;\n    margin-right: 0; } }\n\ntag {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;\n  font-weight: 400;\n  font-size: 1em;\n  letter-spacing: 0.05rem;\n  color: #444;\n  border-radius: 16px;\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n  margin: 0.1rem 0.3rem 0.1rem 0;\n  padding: 0.08rem 0.45rem;\n  height: 32px;\n  line-height: 34px;\n  background: #efefef;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative; }\n  tag:not(.readonly):not(.tag--editing):focus {\n    background: #2196F3;\n    color: #fff; }\n  tag:not(.readonly):not(.tag--editing):active {\n    background: #0d8aee;\n    color: #fff; }\n  tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n    background: #e2e2e2;\n    color: initial; }\n  tag.readonly {\n    cursor: default; }\n  tag.readonly:focus, tag:focus {\n    outline: 0; }\n  tag.tag--editing {\n    background-color: #fff;\n    border: 1px solid #ccc;\n    cursor: text; }\n\n.minimal tag {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  border-radius: 0;\n  background: #f9f9f9;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative; }\n  .minimal tag:not(.readonly):not(.tag--editing):focus {\n    background: #d0d0d0;\n    color: initial; }\n  .minimal tag:not(.readonly):not(.tag--editing):active {\n    background: #d0d0d0;\n    color: initial; }\n  .minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n    background: #ececec; }\n  .minimal tag.readonly {\n    cursor: default; }\n  .minimal tag.readonly:focus, .minimal tag:focus {\n    outline: 0; }\n  .minimal tag.tag--editing {\n    cursor: text; }\n\n.dark tag {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  color: #f9f9f9;\n  border-radius: 3px;\n  background: #444;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative; }\n  .dark tag:not(.readonly):not(.tag--editing):focus {\n    background: #efefef;\n    color: #444; }\n  .dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n    background: #2b2b2b;\n    color: #f9f9f9; }\n  .dark tag.readonly {\n    cursor: default; }\n  .dark tag.readonly:focus, .dark tag:focus {\n    outline: 0; }\n  .dark tag.tag--editing {\n    cursor: text; }\n\n.bootstrap tag {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  color: #f9f9f9;\n  border-radius: 0.25rem;\n  background: #0275d8;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative; }\n  .bootstrap tag:not(.readonly):not(.tag--editing):focus {\n    background: #025aa5; }\n  .bootstrap tag:not(.readonly):not(.tag--editing):active {\n    background: #025aa5; }\n  .bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n    background: #0267bf;\n    color: #f9f9f9; }\n  .bootstrap tag.readonly {\n    cursor: default; }\n  .bootstrap tag.readonly:focus, .bootstrap tag:focus {\n    outline: 0; }\n  .bootstrap tag.tag--editing {\n    cursor: text; }\n\n.bootstrap3-info tag {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 95%;\n  color: #fff;\n  border-radius: 0.25em;\n  background: #5bc0de;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  overflow: hidden;\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n  padding: .25em .6em;\n  text-align: center;\n  white-space: nowrap; }\n  .bootstrap3-info tag:not(.readonly):not(.tag--editing):focus {\n    background: #28a1c5; }\n  .bootstrap3-info tag:not(.readonly):not(.tag--editing):active {\n    background: #28a1c5; }\n  .bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n    background: #46b8da;\n    color: #fff; }\n  .bootstrap3-info tag.readonly {\n    cursor: default; }\n  .bootstrap3-info tag.readonly:focus, .bootstrap3-info tag:focus {\n    outline: 0; }\n  .bootstrap3-info tag.tag--editing {\n    cursor: text; }\n\n:host {\n  display: block; }\n`],\n    template: `<!-- CONTAINER -->\n\n<div ngClass=\"ng2-tag-input {{ theme || '' }}\"\n     (click)=\"focus(true, false)\"\n     [attr.tabindex]=\"-1\"\n\n     (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\n     (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragover)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n     [class.ng2-tag-input--dropping]=\"isDropping()\"\n     [class.ng2-tag-input--disabled]=\"disable\"\n     [class.ng2-tag-input--loading]=\"isLoading\"\n     [class.ng2-tag-input--invalid]=\"hasErrors()\"\n     [class.ng2-tag-input--focused]=\"isInputFocused()\">\n\n    <!-- TAGS -->\n    <div class=\"ng2-tags-container\">\n        <tag *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\n\n             (onSelect)=\"selectItem(item)\"\n             (onRemove)=\"onRemoveRequested(item, i)\"\n             (onKeyDown)=\"handleKeydown($event)\"\n             (onTagEdited)=\"onTagEdited.emit($event)\"\n             (onBlur)=\"onTagBlurred($event, i)\"\n             draggable=\"{{ editable }}\"\n\n             (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\n             (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\n             (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n             (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\n             (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n             [attr.tabindex]=\"0\"\n             [disabled]=\"disable\"\n             [@animation]=\"animationMetadata\"\n             [hasRipple]=\"ripple\"\n             [index]=\"i\"\n             [removable]=\"removable\"\n             [editable]=\"editable\"\n             [displayBy]=\"displayBy\"\n             [identifyBy]=\"identifyBy\"\n             [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\n             [draggable]=\"dragZone\"\n             [model]=\"item\">\n        </tag>\n\n        <tag-input-form\n            (onSubmit)=\"onAddingRequested(false, formValue)\"\n            (onBlur)=\"blur()\"\n            (click)=\"dropdown ? dropdown.show() : undefined\"\n            (onKeydown)=\"fireEvents('keydown', $event)\"\n            (onKeyup)=\"fireEvents('keyup', $event)\"\n\n            [(inputText)]=\"inputText\"\n            [disabled]=\"disable\"\n            [validators]=\"validators\"\n            [asyncValidators]=\"asyncValidators\"\n            [hidden]=\"maxItemsReached\"\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\n            [inputClass]=\"inputClass\"\n            [inputId]=\"inputId\"\n            [tabindex]=\"tabindex\">\n        </tag-input-form>\n    </div>\n\n    <div class=\"progress-bar\" *ngIf=\"isLoading\"></div>\n</div>\n\n<!-- ERRORS -->\n<div *ngIf=\"hasErrors()\" class=\"error-messages {{ theme || '' }}\">\n    <p *ngFor=\"let error of inputForm.getErrorMessages(errorMessages)\" class=\"error-message\">\n        <span>{{ error }}</span>\n    </p>\n</div>\n\n<ng-content></ng-content>\n`,\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = new defaults().separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = new defaults().placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = new defaults().maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = new defaults().validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\n\n\t/**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = new defaults().errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = new defaults().theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = new defaults().onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId: string = new defaults().inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = new defaults().inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = new defaults().clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = new defaults().hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = new defaults().addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = new defaults().addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = new defaults().pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = new defaults().blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = new defaults().removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = new defaults().editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = new defaults().allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = new defaults().modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = new defaults().trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = new defaults().ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = new defaults().tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = new defaults().disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = new defaults().dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = new defaults().onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = new defaults().onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = new defaults().animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\n\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n\t/**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    constructor(private readonly renderer: Renderer2,\n                public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n\t    // Setting editable to false to fix problem with tags in IE still being editable when\n\t    // onlyFromAutocomplete is true\n\t\tthis.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): void {\n        const subscribeFn = (model: TagModel) => this.removeItem(model, index);\n\n        this.onRemoving ?\n            this.onRemoving(tag).pipe(first())\n                .subscribe(subscribeFn) : subscribeFn(tag);\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number): void {\n        if (!tag) {\n            return;\n        }\n\n        const subscribeFn = (model: TagModel) => {\n            return this.addItem(fromAutocomplete, model, index);\n        }\n\n        this.onAdding ?\n            this.onAdding(tag).pipe(first())\n                .subscribe(subscribeFn) : subscribeFn(tag);\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n            case constants.ACTIONS_KEYS.TAB:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value);\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return <FormControl>this.inputForm.value;\n    }\n\n\t/**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n\t/**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n\t/**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({dragging: true, index});\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({dropping: true});\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param item\n     */\n    public trackBy(item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private isTagValid(tag: TagModel, fromAutocomplete = false): boolean {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n\n        if (selectedItem && !fromAutocomplete) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(tag => {\n                return this.getItemValue(tag.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes === true,\n\n            // 2. check max items has not been reached\n            this.maxItemsReached === false,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || this.onlyFromAutocomplete === false)\n        ];\n\n        return assertions.filter(item => item).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.tags.last.model === item;\n        const isFirst = this.tags.first.model === item;\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    private removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete\n     * @param item\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number): void {\n        const model = this.getItemDisplay(item);\n\n        /**\n         * @name reset\n         */\n        const reset = (): void => {\n            // reset control and focus input\n            this.setInputValue('');\n\n            // focus input\n            this.focus(true, false);\n        };\n\n        /**\n         * @name validationFilter\n         * @param tag\n         */\n        const validationFilter = (tag: TagModel): boolean => {\n            const isValid = this.isTagValid(tag, fromAutocomplete) && this.inputForm.form.valid;\n\n            if (!isValid) {\n                this.onValidationError.emit(tag);\n            }\n\n            return isValid;\n        };\n\n        /**\n         * @name subscribeFn\n         * @param tag\n         */\n        const subscribeFn = (tag: TagModel): void => {\n            this.appendTag(tag, index);\n\n            // emit event\n            this.onAdd.emit(tag);\n\n            if (!this.dropdown) {\n                return;\n            }\n\n            this.dropdown.hide();\n            this.dropdown.showDropdownIfEmpty ? this.dropdown.show() : undefined;\n        };\n\n        of(model).pipe(\n            first(),\n            filter(() => model.trim() !== ''),\n            map(() => item),\n            map(this.createTag),\n            filter(validationFilter)\n        ).subscribe(subscribeFn, undefined, reset);\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n\n            if (hasKeyCode || hasKey) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue);\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            this.fireEvents('keydown', event);\n\n            if (event.key === 'Backspace' && this.formValue === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener(): void {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', this.onPasteCallback);\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce),\n                map(() => this.formValue)\n            )\n            .subscribe((value: string) => this.onTextChange.emit(value));\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            return !(this.dropdown && this.dropdown.isVisible) && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(filter(filterFn))\n            .subscribe(() => {\n                if (this.addOnBlur) {\n                    this.onAddingRequested(false, this.formValue);\n                }\n\n                this.setInputValue('');\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = (data: ClipboardEvent): void => {\n        const text = data.clipboardData.getData('text/plain');\n\n        text.split(this.pasteSplitPattern)\n            .map(item => this.createTag(item))\n            .forEach(item => this.onAddingRequested(false, item));\n\n        this.onPaste.emit(text);\n\n        setTimeout(() => this.setInputValue(''), 0);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: {...this.animationDuration}\n        };\n    }\n}\n",
    "import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate(\"{{ enter }}\", keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate(\"{{ leave }}\", keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n",
    "import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst KeyboardEvent = (global as any).KeyboardEvent;\nconst MouseEvent = (global as any).MouseEvent;\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    template: `<div (click)=\"select($event)\"\n     (dblclick)=\"toggleEditMode()\"\n     (mousedown)=\"rippleState='clicked'\"\n     (mouseup)=\"rippleState='none'\"\n     [ngSwitch]=\"!!template\"\n     [class.disabled]=\"disabled\"\n     [attr.tabindex]=\"-1\"\n     [attr.aria-label]=\"getDisplayValue(model)\">\n\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\n        <!-- CUSTOM TEMPLATE -->\n        <ng-template\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\n            [ngTemplateOutlet]=\"template\">\n        </ng-template>\n    </div>\n\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\n        <!-- TAG NAME -->\n        <div [attr.contenteditable]=\"editing\"\n             [attr.title]=\"getDisplayValue(model)\"\n             class=\"tag__text inline\"\n             spellcheck=\"false\"\n             (keydown.enter)=\"disableEditMode($event)\"\n             (keydown.escape)=\"disableEditMode($event)\"\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\n             (blur)=\"onBlurred($event)\">\n            {{ getDisplayValue(model) }}\n        </div>\n\n        <!-- 'X' BUTTON -->\n        <delete-icon\n            aria-label=\"Remove tag\"\n            role=\"button\"\n            (click)=\"remove($event)\"\n            *ngIf=\"isDeleteIconVisible()\">\n        </delete-icon>\n    </div>\n</div>\n\n<tag-ripple [state]=\"rippleState\"\n            [attr.tabindex]=\"-1\"\n            *ngIf=\"isRippleVisible\">\n</tag-ripple>\n`,\n    styles: [`:host,\n:host > div,\n:host > div:focus {\n  outline: 0;\n  overflow: hidden;\n  -webkit-transition: opacity 1s;\n  transition: opacity 1s;\n  z-index: 1; }\n\n:host {\n  max-width: 400px; }\n\n:host.blink {\n  -webkit-animation: blink 0.3s normal forwards ease-in-out;\n  animation: blink 0.3s normal forwards ease-in-out; }\n\n@-webkit-keyframes blink {\n  0% {\n    opacity: 0.3; } }\n\n@keyframes blink {\n  0% {\n    opacity: 0.3; } }\n\n:host .disabled {\n  cursor: not-allowed; }\n\n:host [contenteditable='true'] {\n  outline: 0; }\n\n.tag-wrapper {\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n\n.tag__text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; }\n`]\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input() public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input() public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input() public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input() public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input() public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input() public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input() public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input() public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name onSelect\n     */\n    @Output() public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output() public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output() public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    };\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving') public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple) public ripple: TagRipple;\n\n    constructor(public element: ElementRef,\n                public renderer: Renderer2,\n                private cdRef: ChangeDetectorRef) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: KeyboardEvent): void {\n        if (this.editing) {\n            event.keyCode === 13 ? this.disableEditMode(event) : undefined;\n            return;\n        }\n\n        this.onKeyDown.emit({event, model: this.model});\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n\t\tif (!this.editable) {\n\t\t\treturn;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result = typeof this.model === 'string' ? value :\n            {...this.model, [this.displayBy]: value};\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly &&\n            !this.editing &&\n            isChrome &&\n            this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: KeyboardEvent): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return !this.readonly &&\n            !this.disabled &&\n            this.removable &&\n            !this.editing;\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (model: TagModel) => {\n            return typeof model === 'string' ?\n                model === input :\n                model[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model = typeof this.model === 'string' ? input :\n            {\n                [this.identifyBy]: hasId() ? this.model[this.identifyBy] : input,\n                [this.displayBy]: input\n            };\n\n        // emit output\n        this.model = model;\n        this.onTagEdited.emit(model);\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n",
    "import {\n    Component,\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    Input\n} from '@angular/core';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n        \n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state: string = 'none';\n}\n",
    "import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styles: [`.dark tag:focus {\n  -webkit-box-shadow: 0 0 0 1px #323232;\n          box-shadow: 0 0 0 1px #323232; }\n\n.ng2-tag-input.bootstrap3-info {\n  background-color: #fff;\n  display: inline-block;\n  color: #555;\n  vertical-align: middle;\n  max-width: 100%;\n  height: 42px;\n  line-height: 44px; }\n\n.ng2-tag-input.bootstrap3-info input {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0 6px;\n  margin: 0;\n  width: auto;\n  max-width: inherit; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n  color: #777;\n  opacity: 1; }\n\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n  color: #777; }\n\n.ng2-tag-input.bootstrap3-info input:focus {\n  border: none;\n  -webkit-box-shadow: none;\n          box-shadow: none; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n  border: 1px solid #ccc; }\n\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n  -webkit-box-shadow: inset 0 1px 1px #d9534f;\n          box-shadow: inset 0 1px 1px #d9534f; }\n\n.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n  padding: 0.25rem 0;\n  min-height: 32px;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .ng2-tag-input:focus {\n    outline: 0; }\n  .ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #2196F3; }\n  .ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #f44336; }\n  .ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .ng2-tag-input form {\n    margin: 0.1em 0; }\n  .ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.minimal.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 1px solid transparent; }\n  .minimal.ng2-tag-input:focus {\n    outline: 0; }\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .minimal.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.dark.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #444; }\n  .dark.ng2-tag-input:focus {\n    outline: 0; }\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .dark.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .dark.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  cursor: text;\n  border-bottom: 2px solid #efefef; }\n  .bootstrap.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n    border-bottom: 2px solid #0275d8; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 2px solid #d9534f; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.bootstrap3-info.ng2-tag-input {\n  display: block;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  position: relative;\n  padding: 4px;\n  cursor: text;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  border-radius: 4px; }\n  .bootstrap3-info.ng2-tag-input:focus {\n    outline: 0; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n    opacity: 0.7; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n    border-bottom: 1px solid #d9534f; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n    border: none; }\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n    opacity: 0.5;\n    cursor: not-allowed; }\n  .bootstrap3-info.ng2-tag-input form {\n    margin: 0.1em 0; }\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n\n.error-message {\n  font-size: 0.8em;\n  color: #f44336;\n  margin: 0.5em 0 0 0; }\n\n.bootstrap .error-message {\n  color: #d9534f; }\n\n.ng2-tag-input__text-input {\n  display: inline;\n  vertical-align: middle;\n  border: none;\n  padding: 0 0.5rem;\n  height: 38px;\n  font-size: 1em;\n  font-family: \"Roboto\", \"Helvetica Neue\", sans-serif; }\n  .ng2-tag-input__text-input:focus {\n    outline: 0; }\n  .ng2-tag-input__text-input[disabled=true] {\n    opacity: 0.5;\n    background: #fff; }\n`],\n    template: `<!-- form -->\n<form (submit)=\"submit($event)\" [formGroup]=\"form\">\n    <input #input\n\n           type=\"text\"\n           class=\"ng2-tag-input__text-input\"\n           autocomplete=\"off\"\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\n           minlength=\"1\"\n\n           [(ngModel)]=\"inputText\"\n           [formControlName]=\"'item'\"\n           [ngClass]=\"inputClass\"\n           [attr.id]=\"inputId\"\n           [attr.placeholder]=\"placeholder\"\n           [attr.aria-label]=\"placeholder\"\n           [attr.tabindex]=\"tabindex\"\n           [attr.disabled]=\"disabled ? disabled : null\"\n\n           (focus)=\"onFocus.emit($event)\"\n           (blur)=\"onBlur.emit($event)\"\n           (keydown)=\"onKeyDown($event)\"\n           (keyup)=\"onKeyup.emit($event)\"\n    />\n</form>\n`\n})\nexport class TagInputForm {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled: boolean = false;\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name input\n     */\n    @ViewChild('input') public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @name inputTextValue\n     */\n    public inputTextValue: string = '';\n\n    public ngOnInit() {\n        // creating form\n        this.form = new FormGroup({\n            item: new FormControl({value: '', disabled: this.disabled}, this.validators, this.asyncValidators)\n        });\n    }\n\n\t/**\n     * @name value\n     */\n    public get value(): AbstractControl | null {\n        return this.form.get('item');\n    }\n\n\t/**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return document.activeElement === this.input.nativeElement;\n    }\n\n\t/**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages): string[] {\n        const value = this.value;\n\n        return value ? Object.keys(messages)\n            .filter(err => value.hasError(err))\n            .map(err => messages[err]) : [];\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return this.form.dirty &&\n            this.form.value.item &&\n            this.form.invalid;\n    }\n\n\t/**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n\t/**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        this.onSubmit.emit($event);\n    }\n}\n",
    "\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n",
    "import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    };\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     */\n    public getItemValue(item: TagModel): string {\n        return isObject(item) ? item[this.identifyBy] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     */\n    public getItemDisplay(item: TagModel): string {\n        return isObject(item) ? item[this.displayBy] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n",
    "import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };",
    "import { Observable } from 'rxjs/Observable';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: string;\n    onTextChangeDebounce: number;\n    inputId: string;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: '',\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: \"250ms\",\n            leave: \"150ms\"\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n",
    "import {\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Injector,\n    Input,\n    QueryList,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs/Observable';\nimport { map, filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { OptionsProvider } from '../../core/providers/options-provider';\nimport { TagInputComponent } from '../tag-input/tag-input';\nimport { TagInputDropdownOptions } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\n\nconst defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\n\n@Component({\n    selector: 'tag-input-dropdown',\n    template: `<ng2-dropdown>\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\n                       [appendToBody]=\"appendToBody\"\n                       [offset]=\"offset\">\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\n                       [value]=\"item\"\n                       [ngSwitch]=\"!!templates.length\">\n\n            <span *ngSwitchCase=\"false\"\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\n            </span>\n\n            <ng-template *ngSwitchDefault\n                      [ngTemplateOutlet]=\"templates.first\"\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\n            </ng-template>\n        </ng2-menu-item>\n    </ng2-dropdown-menu>\n</ng2-dropdown>\n`\n})\nexport class TagInputDropdown {\n    /**\n     * @name dropdown\n     */\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n    /**\n     * @name menuTemplate\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name offset\n     */\n    @Input() public offset: string = new defaults().offset;\n\n    /**\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = new defaults().focusFirstElement;\n\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n    @Input() public showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\n\n    /**\n     * @description observable passed as input which populates the autocomplete items\n     * @name autocompleteObservable\n     */\n    @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    @Input() public minimumTextLength = new defaults().minimumTextLength;\n\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n    @Input() public limitItemsTo: number = new defaults().limitItemsTo;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy = new defaults().displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy = new defaults().identifyBy;\n\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = new defaults().appendToBody;\n\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n    @Input() public keepOpen = new defaults().keepOpen;\n\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n    public items: TagModel[] = [];\n\n    /**\n     * @name tagInput\n     */\n    public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n    /**\n     * @name _autocompleteItems\n     */\n    private _autocompleteItems: TagModel[] = [];\n\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    public set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    @Input() public get autocompleteItems(): TagModel[] {\n        const items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n\n    constructor(private readonly injector: Injector) {}\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        this.onItemClicked().subscribe(this.requestAdding);\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n\n        this.tagInput\n            .onTextChange\n            .asObservable()\n            .pipe(\n                debounceTime(DEBOUNCE_TIME),\n                filter((value: string) => {\n                    if (KEEP_OPEN === false) {\n                        return value.length > 0;\n                    }\n\n                    return true;\n                })\n            )\n            .subscribe(this.show);\n    }\n\n    /**\n     * @name updatePosition\n     */\n    public updatePosition(): void {\n        const position = this.tagInput.inputForm.getElementPosition();\n\n        this.dropdown.menu.updatePosition(position);\n    }\n\n    /**\n     * @name isVisible\n     */\n    public get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n\n    /**\n     * @name onHide\n     */\n    public onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n\n    /**\n     * @name onItemClicked\n     */\n    public onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n\n    /**\n     * @name selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name state\n     */\n    public get state(): any {\n        return this.dropdown.menu.state;\n    }\n\n    /**\n     *\n     * @name show\n     */\n    public show = (): void => {\n        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n        const value = this.getFormValue();\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\n        const position = this.calculatePosition();\n        const items = this.getMatchingItems(value);\n        const hasItems = items.length > 0;\n        const isHidden = this.isVisible === false;\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n        const assertions = [];\n\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n        const shouldHide = this.isVisible && !hasItems;\n\n        if (this.autocompleteObservable && hasMinimumText) {\n            return this.getItemsFromObservable(value);\n        }\n\n        if (!this.showDropdownIfEmpty && !value) {\n            return this.dropdown.hide();\n        }\n\n        if (maxItemsReached) {\n            return this.dropdown.hide();\n        }\n\n        this.setItems(items);\n\n        if (shouldShow) {\n            this.dropdown.show(position);\n        } else if (shouldHide) {\n            this.hide();\n        }\n    }\n\n    /**\n     * @name hide\n     */\n    public hide(): void {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener(): void {\n        if (!this.isVisible) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n\n    /**\n     * @name onWindowBlur\n     */\n    @HostListener('window:blur')\n    public onWindowBlur(): void {\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name getFormValue\n     */\n    private getFormValue(): string {\n        return this.tagInput.formValue.trim();\n    }\n\n    /**\n     * @name calculatePosition\n     */\n    private calculatePosition(): ClientRect {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    private requestAdding = (item: Ng2MenuItem): void => {\n        this.tagInput.onAddingRequested(true, this.createTagModel(item));\n    }\n\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    private createTagModel(item: Ng2MenuItem): TagModel {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n\n    /**\n     *\n     * @param value {string}\n     */\n    private getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        const dupesAllowed = this.tagInput.allowDupes;\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const hasValue: boolean = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n                const identifyBy = this.tagInput.identifyBy;\n                const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && (hasValue === false);\n        });\n    }\n\n    /**\n     * @name setItems\n     */\n    private setItems(items: TagModel[]): void {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n\n    /**\n     * @name resetItems\n     */\n    private resetItems = (): void => {\n        this.items = [];\n    }\n\n    /**\n     * @name populateItems\n     * @param data\n     */\n    private populateItems(data: any): TagInputDropdown {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        return this;\n    }\n\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    private getItemsFromObservable = (text: string): void => {\n        this.setLoadingState(true);\n\n        const subscribeFn = (data: any[]) => {\n            // hide loading animation\n            this.setLoadingState(false)\n                // add items\n                .populateItems(data);\n\n            this.setItems(this.getMatchingItems(text));\n\n            if (this.items.length) {\n                this.dropdown.show(this.calculatePosition());\n            } else if (!this.showDropdownIfEmpty && this.isVisible) {\n                this.dropdown.hide();\n            } else if (!this.showDropdownIfEmpty) {\n                this.dropdown.hide();\n            }\n        };\n\n        this.autocompleteObservable(text)\n            .pipe(first())\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\n    }\n\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    private setLoadingState(state: boolean): TagInputDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\n}\n",
    "/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n\n",
    "import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n"
  ],
  "names": [
    "state",
    "animations",
    "constants.KEYDOWN",
    "of",
    "constants.NEXT",
    "constants.PREV",
    "constants.ACTIONS_KEYS",
    "constants.KEY_PRESS_ACTIONS",
    "constants.MAX_ITEMS_WARNING",
    "constants.KEYUP",
    "style",
    "animate",
    "keyframes",
    "transition",
    "trigger",
    "defaults"
  ],
  "mappings": "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"
}
