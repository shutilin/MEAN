{"version":3,"file":"ng2-material-dropdown.js","sources":["ts/ng2-material-dropdown.ts","ts/src/modules/ng2-dropdown.module.ts","ts/src/modules/components/dropdown/ng2-dropdown.ts","ts/src/modules/components/menu/ng2-dropdown-menu.ts","ts/src/modules/components/menu-item/ng2-menu-item.ts","ts/src/modules/services/dropdown-state.service.ts","ts/src/modules/services/ng2-dropdown-state.ts","ts/src/modules/components/menu/actions.ts","ts/src/modules/components/button/ng2-dropdown-button.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Ng2Dropdown,Ng2DropdownMenu,Ng2MenuItem,Ng2DropdownButton,Ng2DropdownModule,DropdownStateService} from './index';\n","import { Ng2Dropdown } from './components/dropdown/ng2-dropdown';\nimport { Ng2DropdownMenu } from './components/menu/ng2-dropdown-menu';\nimport { Ng2DropdownButton } from './components/button/ng2-dropdown-button';\nimport { Ng2MenuItem } from './components/menu-item/ng2-menu-item';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownStateService } from './services/dropdown-state.service';\nexport class Ng2DropdownModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown\n    ],\n    declarations: [\n        Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n    ],\n    imports: [\n        CommonModule\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2DropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2DropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2DropdownModule.ctorParameters;\n}\n\n\nexport {\n    Ng2Dropdown,\n    Ng2DropdownMenu,\n    Ng2MenuItem,\n    Ng2DropdownButton,\n    DropdownStateService\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nexport class Ng2Dropdown {\npublic button: Ng2DropdownButton;\npublic menu: Ng2DropdownMenu;\npublic dynamicUpdate: boolean = true;\npublic onItemClicked: EventEmitter<string> = new EventEmitter<string>();\npublic onItemSelected: EventEmitter<string> = new EventEmitter<string>();\npublic onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\npublic onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n/**\n * @param {?} state\n */\nconstructor(private state: DropdownStateService) {}\n/**\n * \\@name toggleMenu\n * @desc toggles menu visibility\n * @param {?=} position\n * @return {?}\n */\npublic toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n/**\n * - hides dropdown\n * \\@name hide\n * @return {?}\n */\npublic hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n/**\n * - shows dropdown\n * \\@name show\n * @param {?=} position\n * @return {?}\n */\npublic show(position = this.button.getPosition()): void {\n        this.menu.show();\n\n        // update menu position based on its button's\n        this.menu.updatePosition(position);\n        this.onShow.emit(this);\n    }\n/**\n * \\@name scrollListener\n * @return {?}\n */\npublic scrollListener() {\n        if (this.state.menuState.isVisible && this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition());\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => this.onItemSelected.emit(item));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng2-dropdown',\n    template: `\n      <div class=\"ng2-dropdown-container\">\n          <ng-content select=\"ng2-dropdown-button\"></ng-content>\n          <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n      </div>\n    `,\n    providers: [ DropdownStateService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownStateService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'button': [{ type: ContentChild, args: [Ng2DropdownButton, ] },],\n'menu': [{ type: ContentChild, args: [Ng2DropdownMenu, ] },],\n'dynamicUpdate': [{ type: Input },],\n'onItemClicked': [{ type: Output },],\n'onItemSelected': [{ type: Output },],\n'onShow': [{ type: Output },],\n'onHide': [{ type: Output },],\n'scrollListener': [{ type: HostListener, args: ['window:scroll', ] },],\n};\n}\n\nfunction Ng2Dropdown_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2Dropdown.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2Dropdown.ctorParameters;\n/** @type {?} */\nNg2Dropdown.propDecorators;\n/** @type {?} */\nNg2Dropdown.prototype.button;\n/** @type {?} */\nNg2Dropdown.prototype.menu;\n/** @type {?} */\nNg2Dropdown.prototype.dynamicUpdate;\n/** @type {?} */\nNg2Dropdown.prototype.onItemClicked;\n/** @type {?} */\nNg2Dropdown.prototype.onItemSelected;\n/** @type {?} */\nNg2Dropdown.prototype.onShow;\n/** @type {?} */\nNg2Dropdown.prototype.onHide;\n/** @type {?} */\nNg2Dropdown.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ElementRef,\n    Renderer,\n    ContentChildren,\n    QueryList,\n    Input,\n    trigger,\n    style,\n    transition,\n    animate,\n    keyframes,\n    state\n} from '@angular/core';\n\nimport { ACTIONS, arrowKeysHandler } from './actions';\n\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nexport class Ng2DropdownMenu {\n/**\n * \\@name width\n */\npublic width: number = 4;\n/**\n * \\@description if set to true, the first element of the dropdown will be automatically focused\n * \\@name focusFirstElement\n */\npublic focusFirstElement: boolean = true;\n/**\n * \\@description sets dropdown offset from the button\n * \\@name offset {string} follow format '<number> <number>' ex. '0 20'\n */\npublic offset: string;\n/**\n * \\@name appendToBody\n */\npublic appendToBody: boolean = true;\n/**\n * \\@name items\n */\npublic items: QueryList<Ng2MenuItem>;\nprivate position: ClientRect;\nprivate listeners = {\n        arrowHandler: undefined,\n        handleKeypress: undefined\n    };\n/**\n * @param {?} state\n * @param {?} element\n * @param {?} renderer\n */\nconstructor(public state: DropdownStateService,\nprivate element: ElementRef,\nprivate renderer: Renderer) {}\n/**\n * \\@name show\n * \\@shows menu and selects first item\n * @return {?}\n */\npublic show(): void {\n        const /** @type {?} */ dc = typeof document !== 'undefined' ? document : undefined;\n        const /** @type {?} */ wd = typeof window !== 'undefined' ? window : undefined;\n\n        // update state\n        this.state.menuState.isVisible = true;\n\n        // setting handlers\n        this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));\n        this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);\n    }\n/**\n * \\@name hide\n * @desc hides menu\n * @return {?}\n */\npublic hide(): void {\n        this.state.menuState.isVisible = false;\n\n        // reset selected item state\n        this.state.dropdownState.unselect();\n\n        // call function to unlisten\n        this.listeners.arrowHandler ? this.listeners.arrowHandler() : undefined;\n        this.listeners.handleKeypress ? this.listeners.handleKeypress() : undefined;\n    }\n/**\n * \\@name updatePosition\n * @desc updates the menu position every time it is toggled\n * @param {?} position {ClientRect}\n * @return {?}\n */\npublic updatePosition(position: ClientRect): void {\n        this.position = position;\n        this.ngDoCheck();\n    }\n/**\n * \\@name handleKeypress\n * @desc executes functions on keyPress based on the key pressed\n * @param {?} $event\n * @return {?}\n */\npublic handleKeypress($event): void {\n        const /** @type {?} */ key = $event.keyCode;\n        const /** @type {?} */ items = this.items.toArray();\n        const /** @type {?} */ index = items.indexOf(this.state.dropdownState.selectedItem);\n\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n\n        ACTIONS[key].call(this, index, items, this.state.dropdownState);\n    }\n/**\n * \\@name getMenuElement\n * @return {?}\n */\nprivate getMenuElement(): Element {\n        return this.element.nativeElement.children[0];\n    }\n/**\n * \\@name calcPositionOffset\n * @param {?} position\n * @return {?}\n */\nprivate calcPositionOffset(position): { top: string, left: string } {\n        const /** @type {?} */ wd = typeof window !== 'undefined' ? window : undefined;\n        const /** @type {?} */ dc = typeof document !== 'undefined' ? document : undefined;\n\n        if (!wd || !dc || !position) {\n            return;\n        }\n\n        const /** @type {?} */ element = this.getMenuElement();\n        const /** @type {?} */ supportPageOffset = wd.pageXOffset !== undefined;\n        const /** @type {?} */ isCSS1Compat = ((dc.compatMode || '') === 'CSS1Compat');\n\n        const /** @type {?} */ x = supportPageOffset ? wd.pageXOffset : isCSS1Compat ?\n            dc.documentElement.scrollLeft : dc.body.scrollLeft;\n\n        const /** @type {?} */ y = supportPageOffset ? wd.pageYOffset : isCSS1Compat ?\n            dc.documentElement.scrollTop : dc.body.scrollTop;\n\n        let { top, left } = this.applyOffset(\n            `${position.top + (this.appendToBody ? y - 15 : 0)}px`,\n            `${position.left + x - 5}px`\n        );\n\n        const /** @type {?} */ clientWidth = element.clientWidth;\n        const /** @type {?} */ clientHeight = element.clientHeight;\n\n        const /** @type {?} */ marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const /** @type {?} */ marginFromRight = parseInt(left) + clientWidth;\n\n        const /** @type {?} */ windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const /** @type {?} */ windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n\n        if (marginFromRight >= windowScrollWidth) {\n            const /** @type {?} */ marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n\n        return { top, left };\n    }\n/**\n * @param {?} top\n * @param {?} left\n * @return {?}\n */\nprivate applyOffset(top: string, left: string): { top: string, left: string } {\n        if (!this.offset) {\n            return { top, left };\n        }\n\n        const /** @type {?} */ offset = this.offset.split(' ');\n\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n\n        return { top, left };\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        const /** @type {?} */ dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n/**\n * @return {?}\n */\npublic ngDoCheck() {\n        if (this.state.menuState.isVisible && this.position) {\n            const /** @type {?} */ element = this.getMenuElement();\n            const /** @type {?} */ position = this.calcPositionOffset(this.position);\n\n            if (position) {\n                this.renderer.setElementStyle(element, 'top', position.top);\n                this.renderer.setElementStyle(element, 'left', position.left);\n            }\n\n            // select first item unless user disabled this option\n            if (this.focusFirstElement &&\n                this.items.first &&\n                !this.state.dropdownState.selectedItem) {\n                this.state.dropdownState.select(this.items.first, false);\n            }\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy() {\n        const /** @type {?} */ elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng2-dropdown-menu',\n    styles: [`\n      .ng2-dropdown-menu {\n        z-index: 100;\n        overflow-y: auto;\n        -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);\n                box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);\n        position: absolute;\n        padding: 0.5em 0;\n        background: #fff;\n        border-radius: 1px;\n        max-height: 400px;\n        width: 260px;\n        min-height: 0;\n        display: block; }\n\n      .ng2-dropdown-menu.ng2-dropdown-menu--inside-element {\n        position: fixed; }\n\n      .ng2-dropdown-menu.ng2-dropdown-menu--width--2 {\n        width: 200px; }\n\n      .ng2-dropdown-menu.ng2-dropdown-menu--width--4 {\n        width: 260px; }\n\n      .ng2-dropdown-menu.ng2-dropdown-menu--width--6 {\n        width: 320px; }\n\n      .ng2-dropdown-backdrop {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        overflow: hidden; }\n\n      :host /deep/ .ng2-menu-divider {\n        height: 1px;\n        min-height: 1px;\n        max-height: 1px;\n        width: 100%;\n        display: block;\n        background: #f9f9f9; }\n    `],\n    template: `\n      <!-- MENU -->\n      <div class='ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}'\n           [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n           [class.ng2-dropdown-menu--open]=\"state.menuState.isVisible\"\n           [@fade]=\"state.menuState.toString()\">\n              <div class=\"ng2-dropdown-menu__options-container\"\n                   [@opacity]=\"state.menuState.toString()\">\n                  <ng-content></ng-content>\n              </div>\n      </div>\n\n      <!-- BACKDROP -->\n      <div class=\"ng2-dropdown-backdrop\" *ngIf=\"state.menuState.isVisible\" (click)=\"hide()\"></div>\n    `,\n    animations: [\n        trigger('fade', [\n            state('visible', style(\n                {display: 'block', height: '*', width: '*'}\n            )),\n            state('hidden', style(\n                {display: 'none', overflow: 'hidden', height: 0, width: 0}\n            )),\n            transition('hidden => visible', [\n                animate('250ms ease-in', keyframes([\n                    style({opacity: 0, offset: 0}),\n                    style({opacity: 1, offset: 1, height: '*', width: '*'}),\n                ]))\n            ]),\n            transition('visible => hidden', [\n                animate('350ms ease-out', keyframes([\n                    style({opacity: 1, offset: 0}),\n                    style({opacity: 0, offset: 1, width: '0', height: '0'}),\n                ]))\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate('450ms ease-in', keyframes([\n                    style({opacity: 0, offset: 0}),\n                    style({opacity: 1, offset: 1}),\n                ]))\n            ]),\n            transition('visible => hidden', [\n                animate('250ms ease-out', keyframes([\n                    style({opacity: 1, offset: 0}),\n                    style({opacity: 0.5, offset: 0.3}),\n                    style({opacity: 0, offset: 1}),\n                ]))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownStateService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'width': [{ type: Input },],\n'focusFirstElement': [{ type: Input },],\n'offset': [{ type: Input },],\n'appendToBody': [{ type: Input },],\n'items': [{ type: ContentChildren, args: [Ng2MenuItem, ] },],\n};\n}\n\nfunction Ng2DropdownMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2DropdownMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2DropdownMenu.ctorParameters;\n/** @type {?} */\nNg2DropdownMenu.propDecorators;\n/**\n * \\@name width\n * @type {?}\n */\nNg2DropdownMenu.prototype.width;\n/**\n * \\@description if set to true, the first element of the dropdown will be automatically focused\n * \\@name focusFirstElement\n * @type {?}\n */\nNg2DropdownMenu.prototype.focusFirstElement;\n/**\n * \\@description sets dropdown offset from the button\n * \\@name offset {string} follow format '<number> <number>' ex. '0 20'\n * @type {?}\n */\nNg2DropdownMenu.prototype.offset;\n/**\n * \\@name appendToBody\n * @type {?}\n */\nNg2DropdownMenu.prototype.appendToBody;\n/**\n * \\@name items\n * @type {?}\n */\nNg2DropdownMenu.prototype.items;\n/** @type {?} */\nNg2DropdownMenu.prototype.position;\n/** @type {?} */\nNg2DropdownMenu.prototype.listeners;\n/** @type {?} */\nNg2DropdownMenu.prototype.state;\n/** @type {?} */\nNg2DropdownMenu.prototype.element;\n/** @type {?} */\nNg2DropdownMenu.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    Input,\n    Renderer,\n    ElementRef\n} from '@angular/core';\n\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nexport class Ng2MenuItem {\n/**\n * \\@preventClose\n * @desc if true, clicking on the item won't close the dropdown\n */\npublic preventClose: boolean = false;\n/**\n * \\@name value\n * @desc any value associated to the item\n */\npublic value: any;\n/**\n * @param {?} state\n * @param {?} element\n * @param {?} renderer\n */\nconstructor(private state: DropdownStateService,\nprivate element: ElementRef,\nprivate renderer: Renderer) {}\n/**\n * \\@name isSelected\n * @desc returns current selected item\n * @return {?}\n */\npublic get isSelected(): boolean {\n        return this === this.state.dropdownState.selectedItem;\n    }\n/**\n * \\@name click\n * @desc emits select event\n * @param {?=} $event\n * @return {?}\n */\npublic select($event?): void {\n        this.state.dropdownState.select(this, true);\n\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n/**\n * \\@name click\n * @desc emits click event\n * @return {?}\n */\npublic click(): void {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n/**\n * \\@name focus\n * @return {?}\n */\npublic focus() {\n        this.renderer.invokeElementMethod(this.element.nativeElement.children[0], 'focus');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng2-menu-item',\n    styles: [`\n      .ng2-menu-item {\n        font-family: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial;\n        background: #fff;\n        color: rgba(0, 0, 0, 0.87);\n        cursor: pointer;\n        font-size: 0.9em;\n        text-transform: none;\n        font-weight: 400;\n        letter-spacing: 0.03em;\n        height: 48px;\n        line-height: 48px;\n        padding: 0.3em 1.25rem;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n        -webkit-transition: background 0.25s;\n        transition: background 0.25s; }\n\n      .ng2-menu-item--selected {\n        background: rgba(158, 158, 158, 0.2);\n        outline: 0; }\n\n      .ng2-menu-item:focus {\n        outline: 0; }\n\n      .ng2-menu-item:active {\n        background: rgba(158, 158, 158, 0.4); }\n\n      :host(ng2-menu-item) /deep/ [ng2-menu-item-icon] {\n        vertical-align: middle;\n        font-size: 28px;\n        width: 1.5em;\n        height: 30px;\n        color: rgba(0, 0, 0, 0.44); }\n    `],\n    template: `\n      <div class='ng2-menu-item'\n           role=\"button\"\n           tabindex=\"0\"\n           [class.ng2-menu-item--selected]=\"isSelected\"\n           (keydown.enter)=\"click()\"\n           (click)=\"click()\"\n           (mouseover)=\"select()\">\n              <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownStateService, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'preventClose': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction Ng2MenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2MenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2MenuItem.ctorParameters;\n/** @type {?} */\nNg2MenuItem.propDecorators;\n/**\n * \\@preventClose\n * @desc if true, clicking on the item won't close the dropdown\n * @type {?}\n */\nNg2MenuItem.prototype.preventClose;\n/**\n * \\@name value\n * @desc any value associated to the item\n * @type {?}\n */\nNg2MenuItem.prototype.value;\n/** @type {?} */\nNg2MenuItem.prototype.state;\n/** @type {?} */\nNg2MenuItem.prototype.element;\n/** @type {?} */\nNg2MenuItem.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Ng2DropdownState } from './ng2-dropdown-state';\nexport class DropdownStateService {\npublic menuState = {\n        isVisible: /** @type {?} */(( <boolean>false)),\n/**\n * @return {?}\n */\ntoString(): string {\n            return this.isVisible === true ? 'visible' : 'hidden';\n        }\n    };\npublic dropdownState: Ng2DropdownState = new Ng2DropdownState();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropdownStateService_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownStateService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownStateService.ctorParameters;\n/** @type {?} */\nDropdownStateService.prototype.menuState;\n/** @type {?} */\nDropdownStateService.prototype.dropdownState;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter } from '@angular/core';\nimport { Ng2MenuItem } from '../components/menu-item/ng2-menu-item';\nexport class Ng2DropdownState {\npublic onItemSelected: EventEmitter<Ng2MenuItem> = new EventEmitter<Ng2MenuItem>();\npublic onItemClicked: EventEmitter<Ng2MenuItem> = new EventEmitter<Ng2MenuItem>();\nprivate _selectedItem: Ng2MenuItem;\n/**\n * \\@name selectedItem\n * @desc getter for _selectedItem\n * @return {?}\n */\npublic get selectedItem(): Ng2MenuItem {\n        return this._selectedItem;\n    }\n/**\n * \\@name selects a menu item and emits event\n * @param {?} item {Ng2MenuItem}\n * @param {?=} dispatchEvent {boolean}\n * @return {?}\n */\npublic select(item: Ng2MenuItem, dispatchEvent = true): void {\n        this._selectedItem = item;\n\n        if (!dispatchEvent) {\n            return;\n        }\n\n        item.focus();\n\n        this.onItemSelected.emit(item);\n    }\n/**\n * \\@name unselect\n * @desc sets _selectedItem as undefined\n * @return {?}\n */\npublic unselect(): void {\n        this._selectedItem = undefined;\n    }\n}\n\nfunction Ng2DropdownState_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2DropdownState.prototype.onItemSelected;\n/** @type {?} */\nNg2DropdownState.prototype.onItemClicked;\n/** @type {?} */\nNg2DropdownState.prototype._selectedItem;\n}\n\n","import { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { Ng2DropdownMenu } from './ng2-dropdown-menu';\nimport { Ng2DropdownState } from '../../services/ng2-dropdown-state';\n\nconst /** @type {?} */ KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n/**\n * \\@name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n/**\n * \\@name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n/**\n * \\@name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    } else {\n        state.select(items[0], true);\n    }\n};\n/**\n * @this {?}\n * @return {?}\n */\nfunction onEscape(this: Ng2DropdownMenu) {\n    this.hide();\n};\n/**\n * \\@name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nexport const /** @type {?} */ ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\n/**\n * @param {?} event\n * @return {?}\n */\nexport function arrowKeysHandler(event): void {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n","import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef\n} from '@angular/core';\nexport class Ng2DropdownButton {\npublic onMenuToggled: EventEmitter<boolean> = new EventEmitter<boolean>();\npublic showCaret: boolean = true;\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {}\n/**\n * \\@name toggleMenu\n * @desc emits event to toggle menu\n * @return {?}\n */\npublic toggleMenu(): void {\n        this.onMenuToggled.emit(true);\n    }\n/**\n * \\@name getPosition\n * @desc returns position of the button\n * @return {?}\n */\npublic getPosition(): ClientRect {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng2-dropdown-button',\n    styles: [`\n      .ng2-dropdown-button {\n        font-family: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial;\n        background: #fff;\n        padding: 0.45rem 0.25rem;\n        font-size: 14px;\n        letter-spacing: 0.08rem;\n        color: #444;\n        outline: 0;\n        cursor: pointer;\n        font-weight: 400;\n        border: none;\n        border-bottom: 1px solid #efefef;\n        text-align: left;\n        min-width: 100px;\n        width: 100%;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        max-width: 150px; }\n\n      .ng2-dropdown-button:hover {\n        color: #222; }\n\n      .ng2-dropdown-button:active,\n      .ng2-dropdown-button:focus {\n        color: #222;\n        border-bottom: 2px solid #2196F3; }\n\n      .ng2-dropdown-button__label {\n        -webkit-box-flex: 1;\n            -ms-flex: 1 1 95%;\n                flex: 1 1 95%; }\n\n      .ng2-dropdown-button__caret {\n        width: 12px;\n        height: 12px;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-flex: 1;\n            -ms-flex: 1 1 6%;\n                flex: 1 1 6%; }\n\n      :host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button {\n        border: none;\n        min-width: 40px;\n        width: 40px;\n        border-radius: 100%;\n        -webkit-transition: all 0.2s;\n        transition: all 0.2s;\n        text-align: center;\n        height: 40px;\n        padding: 0.5em; }\n\n      :host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active {\n        background: rgba(0, 0, 0, 0.2); }\n    `],\n    template: `\n      <button class='ng2-dropdown-button' type=\"button\" (click)=\"toggleMenu()\" tabindex=\"0s\">\n          <span class=\"ng2-dropdown-button__label\">\n              <ng-content></ng-content>\n          </span>\n\n          <span class=\"ng2-dropdown-button__caret\" *ngIf=\"showCaret\">\n              <svg enable-background=\"new 0 0 32 32\" height=\"16px\" id=\"Слой_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"16px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><path d=\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\" fill=\"#121313\" id=\"Expand_More\"/><g/><g/><g/><g/><g/><g/></svg>\n          </span>\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onMenuToggled': [{ type: Output },],\n'showCaret': [{ type: Input },],\n};\n}\n\nfunction Ng2DropdownButton_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2DropdownButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2DropdownButton.ctorParameters;\n/** @type {?} */\nNg2DropdownButton.propDecorators;\n/** @type {?} */\nNg2DropdownButton.prototype.onMenuToggled;\n/** @type {?} */\nNg2DropdownButton.prototype.showCaret;\n/** @type {?} */\nNg2DropdownButton.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["state"],"mappings":"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"}
